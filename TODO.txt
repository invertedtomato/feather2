L+C*P*

L+ VLQ Encoded length header
C* Code field, used for matching message type
T* Topic field
P* Message payload

** I'm thinking the focus should be on FeatherStream, and allowing it to be easily attached to a NetworkStream, FileStream or SecureStream. Maybe extension methods for Socket to make the process easier?
** Messages should have a UInt32 code built into them

class MessageStream : IDisposable {
	MessageStream(Stream underlying);
	MessageStream(Stream underlying, Boolean isOwned);

	async void Write<TMessage>() where TMessage : IMessage;

	async TMessage Read<TMessage>() where TMessage : IMessage, new();
}


** Then need to make it easy to use (don't forget SSL!)




InvertedTomato.IO.Feather.Message
InvertedTomato.IO.Feather.MessageStream

InvertedTomato.Net.Zeta.FeatherUdpPublisher
InvertedTomato.Net.Zeta.FeatherUdpSubscriber
InvertedTomato.Net.Zeta.FeatherWsPublisher
InvertedTomato.Net.Zeta.FeatherWsSubscriber

InvertedTomato.Net.Feather.FeatherTCPSocket